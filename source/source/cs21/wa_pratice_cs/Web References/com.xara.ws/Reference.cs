//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3328.4
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3328.4.
// 
namespace wa_pratice_cs.com.xara.ws {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://schemas.microsoft.com/soap-toolkit/wsdl-extension' was not handled.
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RenderServer3DSoapBinding", Namespace="http://soap.xara.com/wsdl/")]
    public class RenderServer3D : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public RenderServer3D() {
            this.Url = "http://ws.xara.com/graphicrender/render3d.asp";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.RenderURL", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("URL")]
        public string RenderURL(string Template, string Text, string TextColor, string BGColor, string Font, string FontSize, string ExportType, out long Width, out long Height) {
            object[] results = this.Invoke("RenderURL", new object[] {
                        Template,
                        Text,
                        TextColor,
                        BGColor,
                        Font,
                        FontSize,
                        ExportType});
            Width = ((long)(results[1]));
            Height = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenderURL(string Template, string Text, string TextColor, string BGColor, string Font, string FontSize, string ExportType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenderURL", new object[] {
                        Template,
                        Text,
                        TextColor,
                        BGColor,
                        Font,
                        FontSize,
                        ExportType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRenderURL(System.IAsyncResult asyncResult, out long Width, out long Height) {
            object[] results = this.EndInvoke(asyncResult);
            Width = ((long)(results[1]));
            Height = ((long)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetTemplates", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Templates")]
        public object[] GetTemplates() {
            object[] results = this.Invoke("GetTemplates", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetTemplates(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetTemplates", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetTemplates(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetFonts", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("Fonts")]
        public object[] GetFonts() {
            object[] results = this.Invoke("GetFonts", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFonts(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFonts", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetFonts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetExportTypes", RequestNamespace="http://soap.xara.com/message/", ResponseNamespace="http://soap.xara.com/message/")]
        [return: System.Xml.Serialization.SoapElementAttribute("ExportTypes")]
        public object[] GetExportTypes() {
            object[] results = this.Invoke("GetExportTypes", new object[0]);
            return ((object[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetExportTypes(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetExportTypes", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public object[] EndGetExportTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((object[])(results[0]));
        }
    }
}
