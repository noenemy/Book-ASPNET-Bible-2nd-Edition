'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.0.3328.4
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3328.4.
'
Namespace com.xara.ws
    
    '<remarks/>
    'CODEGEN: The optional WSDL extension element 'binding' from namespace 'http://schemas.microsoft.com/soap-toolkit/wsdl-extension' was not handled.
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="RenderServer3DSoapBinding", [Namespace]:="http://soap.xara.com/wsdl/")>  _
    Public Class RenderServer3D
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        '<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://ws.xara.com/graphicrender/render3d.asp"
        End Sub
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.RenderURL", RequestNamespace:="http://soap.xara.com/message/", ResponseNamespace:="http://soap.xara.com/message/")>  _
        Public Function RenderURL(ByVal Template As String, ByVal [Text] As String, ByVal TextColor As String, ByVal BGColor As String, ByVal Font As String, ByVal FontSize As String, ByVal ExportType As String, ByRef Width As Long, ByRef Height As Long) As <System.Xml.Serialization.SoapElementAttribute("URL")> String
            Dim results() As Object = Me.Invoke("RenderURL", New Object() {Template, [Text], TextColor, BGColor, Font, FontSize, ExportType})
            Width = CType(results(1),Long)
            Height = CType(results(2),Long)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        Public Function BeginRenderURL(ByVal Template As String, ByVal [Text] As String, ByVal TextColor As String, ByVal BGColor As String, ByVal Font As String, ByVal FontSize As String, ByVal ExportType As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RenderURL", New Object() {Template, [Text], TextColor, BGColor, Font, FontSize, ExportType}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndRenderURL(ByVal asyncResult As System.IAsyncResult, ByRef Width As Long, ByRef Height As Long) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Width = CType(results(1),Long)
            Height = CType(results(2),Long)
            Return CType(results(0),String)
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetTemplates", RequestNamespace:="http://soap.xara.com/message/", ResponseNamespace:="http://soap.xara.com/message/")>  _
        Public Function GetTemplates() As <System.Xml.Serialization.SoapElementAttribute("Templates")> Object()
            Dim results() As Object = Me.Invoke("GetTemplates", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '<remarks/>
        Public Function BeginGetTemplates(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetTemplates", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetTemplates(ByVal asyncResult As System.IAsyncResult) As Object()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetFonts", RequestNamespace:="http://soap.xara.com/message/", ResponseNamespace:="http://soap.xara.com/message/")>  _
        Public Function GetFonts() As <System.Xml.Serialization.SoapElementAttribute("Fonts")> Object()
            Dim results() As Object = Me.Invoke("GetFonts", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '<remarks/>
        Public Function BeginGetFonts(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetFonts", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetFonts(ByVal asyncResult As System.IAsyncResult) As Object()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object())
        End Function
        
        '<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("http://soap.xara.com/action/RenderServer3D.GetExportTypes", RequestNamespace:="http://soap.xara.com/message/", ResponseNamespace:="http://soap.xara.com/message/")>  _
        Public Function GetExportTypes() As <System.Xml.Serialization.SoapElementAttribute("ExportTypes")> Object()
            Dim results() As Object = Me.Invoke("GetExportTypes", New Object(-1) {})
            Return CType(results(0),Object())
        End Function
        
        '<remarks/>
        Public Function BeginGetExportTypes(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetExportTypes", New Object(-1) {}, callback, asyncState)
        End Function
        
        '<remarks/>
        Public Function EndGetExportTypes(ByVal asyncResult As System.IAsyncResult) As Object()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Object())
        End Function
    End Class
End Namespace
